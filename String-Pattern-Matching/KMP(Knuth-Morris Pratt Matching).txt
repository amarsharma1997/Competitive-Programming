#include <bits/stdc++.h>
using namespace std;
string a,b;
long int lps[1000007];

void LPSarray()
{
    long int i,len,m;
    m=b.length();
    len=0;
    lps[0]=0;
    for(i=1;i<m;)
    {
        if(b[i]==b[len])
        {
            lps[i]=len+1;
            len++;
            i++;
        }
        else
        {
            if(len==0)
            {
                lps[i]=0;
                i++;
            }
            else
            {
                len=lps[len-1];
            }
        }
    }
};

void KMP()
{
    long int i=1,len=0,n=a.length(),m=b.length();
    while(i<=n)
    {
        if(a[i-1]==b[len])
        {
            len++;
            if(len==m)
            {
                cout<<"Pattern if found at index(1-based) "<<i-m+1<<endl;
                len=lps[len-1];
            }
            i++;
        }
        else
        {
            if(len==0)
            {
                i++;
            }
            else
            {
                len=lps[len-1];
            }
        }
    }
};

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        cin>>a;
        cin>>b;
        //a is string in which pattern is to be searched..... 
        //b is pattern.....
        LPSarray();
        KMP();
    }
    return 0;
}
